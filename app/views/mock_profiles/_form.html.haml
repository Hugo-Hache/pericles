- content_for :page_scripts do
  = javascript_include_tag("mock_profiles/form.js")

#mock_profile_form
  = bootstrap_nested_form_for(@mock_profile) do |f|
    = f.text_field :name

    - @project.routes.includes(responses: [:resource_representation, :mock_instances]).order(:url).each do |route|
      .route-container.panel.panel-default
        .panel-heading
          .panel-title
            %h4.url=route.url
        .responses.panel-body
          - route.responses.each do |response|
            .response
              %span.label.status-code{class: response_status_code_class(response.status_code)}=response.status_code
              - if response.resource_representation
                .matchers{id: "matchers-#{response.id}"}
                  = f.fields_for :mock_pickers, @mock_pickers_by_response_id[response.id] do |fields|
                    = fields.text_field :url_pattern
                    = fields.text_field :body_pattern
                    = fields.select :mock_instance_ids, response.mock_instances.pluck(:name, :id),
                      { include_blank: true, label: 'Mock Instance'.pluralize(response.is_collection ? 2 : 1) }, multiple: response.is_collection
                    = fields.link_to_remove "Remove"
                    = fields.hidden_field :response_id, class: 'response-id'
            - if response.resource_representation
              = f.link_to_add "Add Matcher", :mock_pickers, data: {target: "#matchers-#{response.id}" }

    %p
      = f.submit
