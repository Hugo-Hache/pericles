- if flash[:error]
  %div{class: "alert alert-danger"}
    =flash[:error]

.page-header
  %h1
    = @resource.name
    .pull-right
      .btn-group{ role: "group" }
        = link_to 'Edit', edit_project_resource_path(@project, @resource, section: "base"), class: "btn btn-default"
        = link_to "Delete", project_resource_path(@project, @resource), method: :delete, data: { confirm: 'Are you sure ?' },
       class: "btn btn-default"

%p
  = @resource.description

%h3
  Attributes
  = render partial: "shared/last_edit", locals: {last_audit: @resource.last_audit}

%div
  / Global Nav tabs
  %ul.nav.nav-tabs.nav-justified{ role: "tablist" }
    %li.active{ role: "presentation" }
      %a{ "aria-controls" => "all attributes", "data-toggle" => "tab", href: "#all-attributes", role: "tab" }
        = "All Attributes"
    %li{ role: "presentation" }
      %a{ "aria-controls" => "resource representations", "data-toggle" => "tab", href: "#resource-reps", role: "tab" }
        = "Resource Representations"
  / Global Tab panes
  .tab-content
    #all-attributes.tab-pane.active{ role: "tabpanel" }
      .panel.panel-default
        .panel-heading
          .flexcontainer.flexcontainer-justify-end
            = link_to 'Edit', edit_project_resource_path(@project, @resource, section: "all_attributes"), class: "btn btn-default"
        .panel-body
          - @resource.resource_attributes.sorted_by_name.each do |attribute|
            = render attribute
    #resource-reps.tab-pane{ role: "tabpanel" }
      %div
        / Nav tabs for Resource Representations
        %ul.nav.nav-tabs{ role: "tablist" }
          - @resource.resource_representations.each do |resource_rep|
            %li{ role: "presentation" }
              %a{ "aria-controls" => "#{resource_rep.name}", "data-toggle" => "tab", href: "#res-#{resource_rep.name}", role: "tab" }
                = resource_rep.name
          %li{ role: "presentation" }
            = link_to '+', new_resource_resource_representation_path(@resource)
        / Tab panes for Resource Representations
        .tab-content
          - @resource.resource_representations.each do |resource_rep|
            .tab-pane{ role: "tabpanel", id: "res-#{resource_rep.name}" }
              = render resource_rep

%h3 Routes

.flexcontainer.flexcontainer-justify-end
  = link_to 'New Route', new_resource_route_path(@resource), class: "btn btn-default btn-lg"

.margin-top-element
  - if @resource.routes.any?
    - @resource.routes.includes(:resource_representations).each do |route|
      .panel.panel-default
        .panel-body
          .row
            .col-xs-2.http-method-column
              %span{ class: get_http_method_label_class(route) }= route.http_method
            .col-xs-3
              %dl
                %dt URL
                %dd= route.url
            .col-xs-3
              %dl
                %dt Description
                %dd= route.description
            .col-xs-3
              - unless route.resource_representations.empty?
                %dl
                  %dt Resource representations
                  %dd= route.resource_representations.uniq.map(&:name).join(", ")
            .col-xs-1
              = link_to 'Show', resource_route_path(@resource, route), class: "btn btn-default btn-md"
  - else
    %p
      %i= t('.no_route_placeholder')
