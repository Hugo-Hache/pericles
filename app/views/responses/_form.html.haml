- content_for :page_scripts do
  = javascript_include_tag("header_autocomplete")
  = javascript_include_tag("generate_schema")
  = javascript_include_tag("responses/form.js")

= hidden_field_tag 'project_id', @route.resource.project.id

= bootstrap_form_for([@route, @response]) do |f|
  - if @response.errors.any?
    #error_explanation
      %h2
        = pluralize(@response.errors.count, "error")
        prohibited this response from being saved:
      %ul
        - @response.errors.full_messages.each do |msg|
          %li= msg

  .row
    .col-xs-6
      = f.text_field :status_code

      %h5 Headers

      %table{class: "table table-striped", id: "headers"}
        %thead
          %tr
            %th Name
            %th Value
            %th
        %tbody
          = f.fields_for :headers, wrapper: false do |response_header_fields|
            = render 'header_fields', f: response_header_fields

      = link_to_add_association "Add a Header", f, :headers,
        { 'data-association-insertion-node' => "#headers tbody", 'data-association-insertion-method' => 'append' }

    .col-xs-6{class: @response.can_have_resource_representation ? 'resource-representation' : 'api-error'}
      = f.select :resource_representation_id, @resource.resource_representations.pluck(:name, :id), include_blank: true
      = f.select :api_error_id, @project.api_errors.pluck(:name, :id), include_blank: true


      %h5 JSON Schema
      = button_tag("Generate Schema from Resource Representation", type: 'button', resource_id: "#{@resource.id}", id: 'generate-schema', style: "display: none;",
        onclick: "generate_schema_from_resource_representation(this)")

      = f.check_box :is_collection
      = f.text_field :root_key, class: 'root-key'

      = f.text_area :json_schema, size: "60x20", label: 'Body JSON schema', readonly: true, value: format_json(@response.json_schema)
  %p
    = f.submit
