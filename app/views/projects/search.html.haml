%ol.breadcrumb
  %li
    = link_to 'Projects', projects_path
  %li
    = link_to "#{project.title}", project_path(project)
  %li
    Search results

%h3 Search results

- if @results.empty?
  %div= "There are no results matching « #{params[:query]} »"
  = image_tag 'sad.gif'
- else
  %div= "There are #{@results.size} results matching « #{params[:query]} »"

  - if @results.project.present?
    %h4= "Project"
    %div= @results.project.description

  - if @results.resources.size.positive?
    %h4= "Resources (#{@results.resources.size})"
    - @results.resources.each do |resource|
      %div
        = link_to resource.name, project_resource_path(project, resource)
        %span.space-before= resource.description

  - if @results.resource_representations.size.positive?
    %h4= "Resource representations (#{@results.resource_representations.size})"
    - @results.resource_representations.each do |resource_representation|
      %div
        %span= "#{resource_representation.name} of "
        = link_to resource_representation.resource.name, project_resource_path(project, resource_representation.resource), class: 'space-before'
      %span.space-before= resource_representation.description

  - if @results.resource_attributes.size.positive?
    %h4= "Attributes (#{@results.resource_attributes.size})"
    - @results.resource_attributes.each do |attribute|
      %div
        %span= "« #{attribute.name} » in "
        = link_to attribute.parent_resource.name, project_resource_path(project, attribute.parent_resource), class: 'space-before'
      %span.space-before= attribute.description

  - if @results.routes.size.positive?
    %h4= "Routes (#{@results.routes.size})"
    - @results.routes.each do |route|
      %div
        %span= route.http_method
        = link_to route.url, project_route_path(project, route), class: 'space-before'
      %span.space-before= route.description

  - if @results.responses.size.positive?
    %h4= "Responses (#{@results.responses.size})"
    - @results.responses.each do |response|
      %div
        %span= "Response #{response.status_code} of"
        = link_to response.route.url, project_route_path(project, response.route), class: 'space-before'
      %span.space-before= "root_key: #{response.root_key}"

  - if @results.metadata.count.positive?
    %h4= "Metadata (#{@results.metadata.count})"
    - @results.metadata.each do |metadatum|
      %div
        = link_to metadatum.name, project_metadatum_path(project, metadatum), class: 'space-before'

  - if @results.resource_instances.count.positive?
    %h4= "Resource instances (#{@results.resource_instances.count})"
    - @results.resource_instances.each do |resource_instance|
      %div
        = link_to resource_instance.name, project_resource_path(project, resource_instance.resource), class: 'space-before'
      %pre.pre-scrollable
        %code
          = format_json(resource_instance.body)

  - if @results.api_error_instances.count.positive?
    %h4= "Error instances (#{@results.api_error_instances.count})"
    - @results.api_error_instances.each do |api_error_instance|
      %div
        = link_to api_error_instance.name, project_api_error_path(project, api_error_instance.api_error), class: 'space-before'
      %pre.pre-scrollable
        %code
          = format_json(api_error_instance.body)

  - if @results.metadatum_instances.count.positive?
    %h4= "Metadatum instances (#{@results.metadatum_instances.count})"
    - @results.metadatum_instances.each do |metadatum_instance|
      %div
        = link_to metadatum_instance.name, project_metadatum_path(project, metadatum_instance.metadatum), class: 'space-before'
        %span.space-before= metadatum_instance.body

  - if @results.api_errors.size.positive?
    %h4= "API Error (#{@results.api_errors.size})"
    - @results.api_errors.each do |api_error|
      %div
        = link_to api_error.name, project_api_error_path(project, api_error)

  - if @results.headers_size.positive?
    %h4= "Headers (#{@results.headers_size})"
    - @results.response_headers.each do |header|
      %div
        %span= "#{header.name}: #{header.value} is used in"
        = link_to header.response.route.url, project_route_path(project, header.response.route), class: 'space-before'
    - @results.route_headers.each do |header|
      %div
        %span= "#{header.name}: #{header.value} is used in"
        = link_to header.route.url, project_route_path(project, header.route), class: 'space-before'

  - if @results.query_parameters.size.positive?
    %h4= "Query Parameters (#{@results.query_parameters.size})"
    - @results.query_parameters.each do |query_parameter|
      %div
        %span= "#{query_parameter.name} in"
        = link_to query_parameter.route.url, project_route_path(project, query_parameter.route), class: 'space-before'
        - if query_parameter.description.present?
          %span.space-before= "(#{query_parameter.description})"

  - if @results.mock_profiles.size.positive?
    %h4= "Mock Profiles (#{@results.mock_profiles.size})"
    - @results.mock_profiles.each do |mock_profile|
      %div= link_to mock_profile.name, project_mock_profile_path(project, mock_profile)

  - if @results.mock_pickers.size.positive?
    %h4= "Matcher (#{@results.mock_pickers.size})"
    - @results.mock_pickers.each do |mock_picker|
      %div
        %span= "Matcher (body_pattern=#{mock_picker.body_pattern}, url_pattern=#{mock_picker.url_pattern}) of "
        = link_to mock_picker.mock_profile.name, project_mock_profile_path(project, mock_picker.mock_profile), class: 'space-before'

  - if @results.reports.size.positive?
    %h4= "Reports (#{@results.reports.size})"
    - @results.reports.each do |report|
      %div
        = link_to 'Report', project_report_path(project, report)
        %span.space-before= "/#{report.url} #{time_ago_in_words(report.created_at)} ago"

  - if @results.validation_errors.size.positive?
    %h4= "Validation Errors (#{@results.validation_errors.size})"
    - @results.validation_errors.each do |validation_error|
      %div
        = link_to 'Report', project_report_path(project, validation_error.report)
        %span.space-before= validation_error.description


:javascript
  function highlightQueryIfElementIsOnlyMadeOfText(element) {
    var html = element.innerHTML;
    if (element.childElementCount != 0) {
      return;
    }

    var query = '#{escape_javascript params[:query].html_safe}';
    var re = new RegExp('(' + query + ')','ig')
    element.innerHTML = html.replace(re, '<span class="highlight">$1</span>');
  }

  $(document).ready(function() {
    var div = $('#page-content-wrapper :not(script)').each(function(i, element) {
      highlightQueryIfElementIsOnlyMadeOfText(element);
    });
  })
